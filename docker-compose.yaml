version: "3.8"

services:
  db:
    image: postgres
    env_file: .env
    volumes:
      - ./.docker/postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      crat-backend:
  rabbitmq:
    image: rabbitmq:3.8.11
    env_file: .env
    restart: unless-stopped
    networks:
      crat-backend:
  web:
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    volumes:
      - .:/app
    ports:
      - "${DOCKER_EXPOSE_PORT?8000}:${DJANGO_PORT?8000}"
    restart: unless-stopped
    command: "python manage.py runserver 0.0.0.0:${DJANGO_PORT?8000}"
    networks:
      crat-backend:
  dramatiq:
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    volumes:
      - .:/app
    restart: unless-stopped
    command: python manage.py rundramatiq
    networks:
      crat-backend:
  scheduler:
    env_file: .env
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    volumes:
      - .:/app
    restart: unless-stopped
    command: python manage.py run_scheduler
    networks:
      crat-backend:

networks:
  crat-backend: